apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: backstage-minio
  labels:
    app: backstage-minio
    backstage.io/kubernetes-id: backstage-minio
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"
spec:
  credsSecret:
    name: minio-creds-secret
  features:
    bucketDNS: false
    domains:
      console: https://console.backstage-minio.localhost:4433
      minio:
        - https://backstage-minio.localhost:4433
    enableSFTP: false
  pools:
    - servers: 2
      name: pool-0
      labels:
        app: backstage-minio
        backstage.io/kubernetes-id: backstage-minio
      topologySpreadConstraints: [ ]
      volumesPerServer: 2
      nodeSelector: { }
      tolerations: [ ]
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 1
          memory: 2Gi
      volumeClaimTemplate:
        apiVersion: v1
        kind: persistentvolumeclaims
        metadata: { }
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
          storageClassName: standard
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
  requestAutoCert: false
  # prometheusOperator:
  #   labels:
  #     app: minio-sm